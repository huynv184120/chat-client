{"ast":null,"code":"import { mess_action_type } from \"../actions/message\";\nconst initState = {\n  listMessages: []\n};\n\nconst messageReducer = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initState;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case mess_action_type.addMessage:\n      {\n        const roomMessage = state.listMessages.find(oj => action.data.to === oj.room_id);\n\n        if (roomMessage) {\n          if (roomMessage.messages.length === 0 || roomMessage.messages[roomMessage.messages.length - 1]._id !== action.data._id) {\n            roomMessage.messages = [...roomMessage.messages, action.data];\n            state.listMessages = [...state.listMessages];\n          }\n        } else {\n          state.listMessages = [...state.listMessages, {\n            room_id: action.data.to,\n            messages: [action.data]\n          }];\n        }\n\n        return { ...state\n        };\n      }\n\n    case mess_action_type.deleteMessage:\n      {\n        const roomMessage = state.listMessages.find(oj => action.data.room._id === oj.room._id);\n\n        if (roomMessage) {\n          roomMessage.messages = roomMessage.messages.filter(mess => mess._id !== action.data.message._id);\n        }\n\n        return { ...state\n        };\n      }\n\n    case mess_action_type.loadMessages:\n      {\n        state.listMessages = [...state.listMessages, {\n          room_id: action.data.room_id,\n          messages: action.data.messages\n        }];\n        return { ...state\n        };\n      }\n\n    case mess_action_type.updateMessage:\n      {\n        const roomMessage = state.listMessages.find(oj => action.data.to === oj.room_id);\n        const index = roomMessage.messages.findIndex(mess => mess._id == action.data._id);\n        roomMessage.messages[index] = action.data;\n        state.listMessages = [...state.listMessages];\n        return { ...state\n        };\n      }\n\n    default:\n      {\n        return state;\n      }\n  }\n};\n\nexport default messageReducer;","map":{"version":3,"names":["mess_action_type","initState","listMessages","messageReducer","state","action","type","addMessage","roomMessage","find","oj","data","to","room_id","messages","length","_id","deleteMessage","room","filter","mess","message","loadMessages","updateMessage","index","findIndex"],"sources":["/home/huy/chat-module/chat-client/src/chat-module/redux/reducers/message.js"],"sourcesContent":["import { mess_action_type } from \"../actions/message\"\n\nconst initState = {\n    listMessages: []\n};\n\nconst messageReducer = (state = initState, action) => {\n    switch (action.type) {\n        case mess_action_type.addMessage: {\n            const roomMessage = state.listMessages.find((oj) => action.data.to === oj.room_id);\n            if (roomMessage) {\n                if((roomMessage.messages.length === 0)||(roomMessage.messages[roomMessage.messages.length-1]._id !== action.data._id)){\n                    roomMessage.messages = [...roomMessage.messages, action.data];\n                    state.listMessages = [...state.listMessages];\n                }\n            } else {\n                state.listMessages = [...state.listMessages, { room_id: action.data.to, messages: [action.data] }]\n            }\n            return { ...state };\n        }\n\n        case mess_action_type.deleteMessage: {\n            const roomMessage = state.listMessages.find((oj) => action.data.room._id === oj.room._id);\n            if (roomMessage) {\n                roomMessage.messages = roomMessage.messages.filter((mess) => mess._id !== action.data.message._id);\n            }\n            return { ...state };\n        }\n        case mess_action_type.loadMessages: {\n            state.listMessages = [...state.listMessages, { room_id: action.data.room_id, messages: action.data.messages }];\n            return { ...state };\n        }\n        case mess_action_type.updateMessage: {\n            const roomMessage = state.listMessages.find((oj) => action.data.to === oj.room_id);\n            const index = roomMessage.messages.findIndex((mess) => (mess._id == action.data._id));\n            roomMessage.messages[index] = action.data;\n            state.listMessages = [...state.listMessages];\n            return {...state};\n        }\n        default: {\n            return state;\n        }\n    }\n}\n\nexport default messageReducer;"],"mappings":"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"},"metadata":{},"sourceType":"module"}