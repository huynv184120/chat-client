{"ast":null,"code":"var _jsxFileName = \"/home/huy/chat-module/chat-client/src/component/auth/Auth.js\",\n    _s = $RefreshSig$();\n\nimport { useState } from 'react';\nimport React from 'react';\nimport { Button, TextField, InputAdornment } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core';\nimport MailIcon from '@material-ui/icons/Mail';\nimport VpnKeyIcon from '@material-ui/icons/VpnKey';\nimport VisibilityIcon from '@material-ui/icons/Visibility';\nimport VisibilityOff from '@material-ui/icons/VisibilityOff';\nimport CodeIcon from '@material-ui/icons/Code';\nimport AccountCircleIcon from '@material-ui/icons/AccountCircle';\nimport { authApi } from '../../api';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles(() => ({\n  authen: {\n    display: \"flex\",\n    flexDirection: \"column\",\n    background: \"rgba(204, 193, 227, 0.6)\",\n    width: \"320px\",\n    border: \"solid\",\n    borderRadius: \"30px\",\n    position: \"absolute\",\n    top: \"15%\",\n    right: \"15vw\",\n    \"min-height\": \"450px\"\n  },\n  loginForm: {\n    display: \"flex\",\n    flexDirection: \"column\",\n    width: \"300px\",\n    margin: \"auto\",\n    marginTop: \"30px\",\n    \"& .MuiInputBase-root\": {\n      marginTop: \"30px\"\n    },\n    \"& .MuiButton-root\": {\n      margin: \"auto\",\n      marginTop: \"30px\",\n      marginBottom: \"10px\",\n      width: \"50px\"\n    }\n  },\n  signup: {\n    display: \"flex\",\n    flexDirection: \"column\",\n    width: \"300px\",\n    margin: \"auto\",\n    marginTop: \"30px\",\n    \"& .MuiInputBase-root\": {\n      marginTop: \"30px\"\n    },\n    \"& .MuiButton-root\": {\n      margin: \"auto\",\n      marginTop: \"30px\",\n      marginBottom: \"30px\",\n      width: \"200px\"\n    }\n  },\n  verify: {\n    display: \"flex\",\n    flexDirection: \"column\",\n    width: \"300px\",\n    margin: \"auto\",\n    marginTop: \"30px\",\n    \"& .MuiInputBase-root\": {\n      marginTop: \"30px\"\n    },\n    \"& .MuiButton-root\": {\n      margin: \"auto\",\n      marginTop: \"30px\",\n      marginBottom: \"30px\",\n      width: \"100px\"\n    }\n  }\n}));\n\nconst Auth = () => {\n  _s();\n\n  const [login, setLogin] = useState(true);\n  const [signup, setSignup] = useState(false);\n  const [verify, setVerify] = useState(false);\n  const [loginForm, setLoginForm] = useState({\n    email: '',\n    password: '',\n    showPassword: true,\n    annouce: \"\"\n  });\n  const [signupForm, setSignupForm] = useState({\n    email: '',\n    password: '',\n    username: '',\n    showPassword: true,\n    confirmPassword: true,\n    annouce: \"\"\n  });\n  const [verifyForm, setVerifyForm] = useState({\n    email: '',\n    code: ''\n  });\n  const classes = useStyles();\n\n  const loginHandle = async () => {\n    const res = await authApi.login({\n      email: loginForm.email,\n      password: loginForm.password\n    });\n    console.log(res.message);\n\n    if (res.message === \"success\") {\n      window.location.reload();\n    } else {\n      setLoginForm({ ...loginForm,\n        annouce: res.message\n      });\n    }\n  };\n\n  const signupHandle = async () => {\n    const res = await authApi.signup({\n      email: signupForm.email,\n      username: signupForm.username,\n      password: signupForm.password\n    });\n\n    if (res.message === \"success\") {\n      window.location.reload();\n    } else {\n      setSignupForm({ ...signupForm,\n        annouce: res.message\n      });\n    }\n  }; // const verifyHandle = () => {\n  //     console.log(verifyForm)\n  // }\n\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      backgroundImage: \"url(https://i.pinimg.com/564x/8d/12/8d/8d128d89ab8baf0c70defe825281825f.jpg)\",\n      backgroundSize: \"100vw 105vh\",\n      width: \"100vw\",\n      height: \"100vh\"\n    },\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.authen,\n      children: [login && /*#__PURE__*/_jsxDEV(\"form\", {\n        autoComplete: \"off\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: classes.loginForm,\n          onKeyDown: e => {\n            if (e.key == 'Enter') loginHandle();\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n            children: \"Login\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 145,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            style: {\n              color: \"red\"\n            },\n            children: loginForm.annouce\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 146,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(TextField, {\n            required: true,\n            id: \"input-with-icon-textfield\",\n            type: \"email\",\n            placeholder: \"email\",\n            InputProps: {\n              startAdornment: /*#__PURE__*/_jsxDEV(InputAdornment, {\n                position: \"start\",\n                children: /*#__PURE__*/_jsxDEV(MailIcon, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 155,\n                  columnNumber: 45\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 154,\n                columnNumber: 41\n              }, this)\n            },\n            onChange: e => setLoginForm({ ...loginForm,\n              email: e.target.value\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 147,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(TextField, {\n            required: true,\n            placeholder: \"password\",\n            type: loginForm.showPassword ? \"password\" : \"text\",\n            error: false,\n            id: \"input-with-icon-textfield\",\n            InputProps: {\n              startAdornment: /*#__PURE__*/_jsxDEV(InputAdornment, {\n                position: \"start\",\n                children: /*#__PURE__*/_jsxDEV(VpnKeyIcon, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 170,\n                  columnNumber: 45\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 169,\n                columnNumber: 41\n              }, this),\n              endAdornment: /*#__PURE__*/_jsxDEV(InputAdornment, {\n                position: \"end\",\n                onClick: () => setLoginForm(pre => ({ ...pre,\n                  showPassword: !pre.showPassword\n                })),\n                children: loginForm.showPassword ? /*#__PURE__*/_jsxDEV(VisibilityIcon, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 175,\n                  columnNumber: 71\n                }, this) : /*#__PURE__*/_jsxDEV(VisibilityOff, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 175,\n                  columnNumber: 92\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 174,\n                columnNumber: 41\n              }, this)\n            },\n            onChange: e => setLoginForm({ ...loginForm,\n              password: e.target.value\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 161,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"contained\",\n            color: \"primary\",\n            href: \"#contained-buttons\",\n            onClick: loginHandle,\n            children: \"login\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 182,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: /*#__PURE__*/_jsxDEV(\"a\", {\n              onClick: () => {\n                setLogin(false);\n                setSignup(true);\n              },\n              style: {\n                cursor: \"pointer\"\n              },\n              children: /*#__PURE__*/_jsxDEV(\"u\", {\n                children: \"sign up\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 188,\n                columnNumber: 37\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 187,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 186,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 144,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 21\n      }, this), signup && /*#__PURE__*/_jsxDEV(\"form\", {\n        autoComplete: \"off\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: classes.signup,\n          children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n            children: \"Create Account\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 201,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            style: {\n              color: \"red\"\n            },\n            children: signupForm.annouce\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 202,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(TextField, {\n            required: true,\n            id: \"input-with-icon-textfield\",\n            type: \"text\",\n            placeholder: \"username\",\n            InputProps: {\n              startAdornment: /*#__PURE__*/_jsxDEV(InputAdornment, {\n                position: \"start\",\n                children: /*#__PURE__*/_jsxDEV(AccountCircleIcon, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 211,\n                  columnNumber: 45\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 210,\n                columnNumber: 41\n              }, this)\n            },\n            onChange: e => setSignupForm({ ...signupForm,\n              username: e.target.value\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 203,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(TextField, {\n            required: true,\n            id: \"input-with-icon-textfield\",\n            type: \"email\",\n            placeholder: \"email\",\n            InputProps: {\n              startAdornment: /*#__PURE__*/_jsxDEV(InputAdornment, {\n                position: \"start\",\n                children: /*#__PURE__*/_jsxDEV(MailIcon, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 226,\n                  columnNumber: 45\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 225,\n                columnNumber: 41\n              }, this)\n            },\n            onChange: e => setSignupForm({ ...signupForm,\n              email: e.target.value\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 218,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(TextField, {\n            required: true,\n            placeholder: \"password\",\n            type: loginForm.showPassword ? \"password\" : \"text\",\n            error: false,\n            id: \"input-with-icon-textfield\",\n            InputProps: {\n              startAdornment: /*#__PURE__*/_jsxDEV(InputAdornment, {\n                position: \"start\",\n                children: /*#__PURE__*/_jsxDEV(VpnKeyIcon, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 241,\n                  columnNumber: 45\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 240,\n                columnNumber: 41\n              }, this),\n              endAdornment: /*#__PURE__*/_jsxDEV(InputAdornment, {\n                position: \"end\",\n                onClick: () => setLoginForm(pre => ({ ...pre,\n                  showPassword: !pre.showPassword\n                })),\n                children: loginForm.showPassword ? /*#__PURE__*/_jsxDEV(VisibilityIcon, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 246,\n                  columnNumber: 71\n                }, this) : /*#__PURE__*/_jsxDEV(VisibilityOff, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 246,\n                  columnNumber: 92\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 245,\n                columnNumber: 41\n              }, this)\n            },\n            onChange: e => setSignupForm({ ...signupForm,\n              password: e.target.value\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 232,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(TextField, {\n            required: true,\n            placeholder: \"confirm password\",\n            type: loginForm.showPassword ? \"password\" : \"text\",\n            error: !signupForm.confirmPassword,\n            helperText: signupForm.confirmPassword ? \"\" : \"incorrect\",\n            id: \"input-with-icon-textfield\",\n            InputProps: {\n              startAdornment: /*#__PURE__*/_jsxDEV(InputAdornment, {\n                position: \"start\",\n                children: /*#__PURE__*/_jsxDEV(VpnKeyIcon, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 264,\n                  columnNumber: 45\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 263,\n                columnNumber: 41\n              }, this),\n              endAdornment: /*#__PURE__*/_jsxDEV(InputAdornment, {\n                position: \"end\",\n                onClick: () => setLoginForm(pre => ({ ...pre,\n                  showPassword: !pre.showPassword\n                })),\n                children: loginForm.showPassword ? /*#__PURE__*/_jsxDEV(VisibilityIcon, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 269,\n                  columnNumber: 71\n                }, this) : /*#__PURE__*/_jsxDEV(VisibilityOff, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 269,\n                  columnNumber: 92\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 268,\n                columnNumber: 41\n              }, this)\n            },\n            onBlur: e => {\n              if (signupForm.password != e.target.value) setSignupForm({ ...signupForm,\n                confirmPassword: false\n              });else setSignupForm({ ...signupForm,\n                confirmPassword: true\n              });\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 254,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"contained\",\n            color: \"primary\",\n            href: \"#contained-buttons\",\n            onClick: signupHandle,\n            children: \"submit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 279,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: /*#__PURE__*/_jsxDEV(\"a\", {\n              onClick: () => {\n                setLogin(true);\n                setSignup(false);\n              },\n              style: {\n                cursor: \"pointer\"\n              },\n              children: /*#__PURE__*/_jsxDEV(\"u\", {\n                children: \"login\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 285,\n                columnNumber: 37\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 284,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 283,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 200,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 199,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 140,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Auth, \"WlGmii2o+OusxThRWYjopjiwMvs=\", false, function () {\n  return [useStyles];\n});\n\n_c = Auth;\nexport default Auth;\n\nvar _c;\n\n$RefreshReg$(_c, \"Auth\");","map":{"version":3,"names":["useState","React","Button","TextField","InputAdornment","makeStyles","MailIcon","VpnKeyIcon","VisibilityIcon","VisibilityOff","CodeIcon","AccountCircleIcon","authApi","useStyles","authen","display","flexDirection","background","width","border","borderRadius","position","top","right","loginForm","margin","marginTop","marginBottom","signup","verify","Auth","login","setLogin","setSignup","setVerify","setLoginForm","email","password","showPassword","annouce","signupForm","setSignupForm","username","confirmPassword","verifyForm","setVerifyForm","code","classes","loginHandle","res","console","log","message","window","location","reload","signupHandle","backgroundImage","backgroundSize","height","e","key","color","startAdornment","target","value","endAdornment","pre","cursor"],"sources":["/home/huy/chat-module/chat-client/src/component/auth/Auth.js"],"sourcesContent":["import { useState } from 'react';\nimport React from 'react';\nimport { Button, TextField, InputAdornment } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core';\nimport MailIcon from '@material-ui/icons/Mail';\nimport VpnKeyIcon from '@material-ui/icons/VpnKey';\nimport VisibilityIcon from '@material-ui/icons/Visibility';\nimport VisibilityOff from '@material-ui/icons/VisibilityOff';\nimport CodeIcon from '@material-ui/icons/Code';\nimport AccountCircleIcon from '@material-ui/icons/AccountCircle';\nimport { authApi } from '../../api';\n\nconst useStyles = makeStyles(() => ({\n    authen: {\n        display: \"flex\",\n        flexDirection: \"column\",\n        background: \"rgba(204, 193, 227, 0.6)\",\n        width: \"320px\",\n        border: \"solid\",\n        borderRadius: \"30px\",\n        position: \"absolute\",\n        top: \"15%\",\n        right: \"15vw\",\n        \"min-height\": \"450px\",\n    },\n    loginForm: {\n        display: \"flex\",\n        flexDirection: \"column\",\n        width: \"300px\",\n        margin: \"auto\",\n        marginTop: \"30px\",\n        \"& .MuiInputBase-root\": {\n            marginTop: \"30px\",\n        },\n        \"& .MuiButton-root\": {\n            margin: \"auto\",\n            marginTop: \"30px\",\n            marginBottom: \"10px\",\n            width: \"50px\",\n\n        }\n    },\n    signup: {\n        display: \"flex\",\n        flexDirection: \"column\",\n        width: \"300px\",\n        margin: \"auto\",\n        marginTop: \"30px\",\n        \"& .MuiInputBase-root\": {\n            marginTop: \"30px\",\n        },\n        \"& .MuiButton-root\": {\n            margin: \"auto\",\n            marginTop: \"30px\",\n            marginBottom: \"30px\",\n            width: \"200px\",\n\n        }\n    },\n    verify:  {\n        display: \"flex\",\n        flexDirection: \"column\",\n        width: \"300px\",\n        margin: \"auto\",\n        marginTop: \"30px\",\n        \"& .MuiInputBase-root\": {\n            marginTop: \"30px\",\n        },\n        \"& .MuiButton-root\": {\n            margin: \"auto\",\n            marginTop: \"30px\",\n            marginBottom: \"30px\",\n            width: \"100px\",\n\n        }\n    }\n\n\n\n\n\n}))\n\nconst Auth = () => {\n\n\n    const [login, setLogin] = useState(true)\n    const [signup, setSignup] = useState(false)\n    const [verify, setVerify] = useState(false)\n\n    const [loginForm, setLoginForm] = useState({\n        email: '',\n        password: '',\n        showPassword: true,\n        annouce:\"\"\n    })\n\n    const [signupForm, setSignupForm] = useState({\n        email: '',\n        password: '',\n        username: '',\n        showPassword: true,\n        confirmPassword:true,\n        annouce:\"\"\n    })\n\n    const [verifyForm, setVerifyForm] = useState({\n        email:'',\n        code:''\n    })\n\n    const classes = useStyles();\n\n\n    const loginHandle = async () => {\n        const res = await authApi.login({email:loginForm.email, password: loginForm.password});\n        console.log(res.message)\n        if(res.message === \"success\"){\n            window.location.reload();\n        }else{\n            setLoginForm({...loginForm,annouce:res.message});\n        }\n    }\n\n    const signupHandle = async () => {\n        const res = await authApi.signup({email:signupForm.email, username:signupForm.username, password:signupForm.password});\n        if(res.message === \"success\"){\n            window.location.reload();\n        }else{\n            setSignupForm({...signupForm, annouce:res.message});\n        }\n    }\n\n    // const verifyHandle = () => {\n    //     console.log(verifyForm)\n    // }\n\n\n    return (\n        <div style={{backgroundImage:\"url(https://i.pinimg.com/564x/8d/12/8d/8d128d89ab8baf0c70defe825281825f.jpg)\",backgroundSize:\"100vw 105vh\", width:\"100vw\", height:\"100vh\"}}>\n            <div className={classes.authen}>\n                {login &&\n                    <form autoComplete='off'>\n                        <div className={classes.loginForm} onKeyDown={(e) => { if (e.key == 'Enter') loginHandle(); }}>\n                            <h1>Login</h1>\n                            <p style={{color:\"red\"}}>{loginForm.annouce}</p>\n                            <TextField\n                                required\n                                id=\"input-with-icon-textfield\"\n                                type=\"email\"\n                                placeholder='email'\n                                InputProps={{\n                                    startAdornment: (\n                                        <InputAdornment position=\"start\">\n                                            <MailIcon />\n                                        </InputAdornment>\n                                    ),\n                                }}\n                                onChange={(e)=>setLoginForm({...loginForm,email:e.target.value})}\n                            />\n                            <TextField\n                                required\n                                placeholder='password'\n                                type={loginForm.showPassword ? \"password\" : \"text\"}\n                                error={false}\n                                id=\"input-with-icon-textfield\"\n                                InputProps={{\n                                    startAdornment: (\n                                        <InputAdornment position=\"start\">\n                                            <VpnKeyIcon />\n                                        </InputAdornment>\n                                    ),\n                                    endAdornment: (\n                                        <InputAdornment position=\"end\" onClick={() => setLoginForm(pre => ({ ...pre, showPassword: !pre.showPassword }))}>\n                                            {loginForm.showPassword ? <VisibilityIcon /> : <VisibilityOff />}\n                                        </InputAdornment>\n                                    ),\n                                }}\n                                onChange={(e)=>setLoginForm({...loginForm, password:e.target.value})}\n\n                            />\n                            <Button variant=\"contained\" color=\"primary\" href=\"#contained-buttons\" onClick={loginHandle}>\n                                login\n                            </Button>\n\n                            <p>\n                                <a onClick={() => { setLogin(false); setSignup(true) }} style={{cursor:\"pointer\"}}>\n                                    <u>sign up</u>\n                                </a>\n                                {/* <label> or </label>\n                                <a onClick={() => { setLogin(false); setVerify(true) }}>\n                                    verify\n                                </a> */}\n                            </p>\n                        </div>\n                    </form>}\n\n                {signup &&\n                    <form autoComplete='off'>\n                        <div className={classes.signup}>\n                            <h1>Create Account</h1>\n                            <p style={{color:\"red\"}}>{signupForm.annouce}</p>\n                            <TextField\n                                required\n                                id=\"input-with-icon-textfield\"\n                                type=\"text\"\n                                placeholder='username'\n                                InputProps={{\n                                    startAdornment: (\n                                        <InputAdornment position=\"start\">\n                                            <AccountCircleIcon />\n                                        </InputAdornment>\n                                    ),\n                                }}\n                                onChange={(e)=>setSignupForm({...signupForm, username:e.target.value})}\n                            />\n\n                            <TextField\n                                required\n                                id=\"input-with-icon-textfield\"\n                                type=\"email\"\n                                placeholder='email'\n                                InputProps={{\n                                    startAdornment: (\n                                        <InputAdornment position=\"start\">\n                                            <MailIcon />\n                                        </InputAdornment>\n                                    ),\n                                }}\n                                onChange={(e)=>setSignupForm({...signupForm, email:e.target.value})}\n                            />\n                            <TextField\n                                required\n                                placeholder='password'\n                                type={loginForm.showPassword ? \"password\" : \"text\"}\n                                error={false}\n                                id=\"input-with-icon-textfield\"\n                                InputProps={{\n                                    startAdornment: (\n                                        <InputAdornment position=\"start\">\n                                            <VpnKeyIcon />\n                                        </InputAdornment>\n                                    ),\n                                    endAdornment: (\n                                        <InputAdornment position=\"end\" onClick={() => setLoginForm(pre => ({ ...pre, showPassword: !pre.showPassword }))}>\n                                            {loginForm.showPassword ? <VisibilityIcon /> : <VisibilityOff />}\n                                        </InputAdornment>\n                                    ),\n                                }}\n\n                                onChange={(e)=>setSignupForm({...signupForm, password:e.target.value})}\n\n                            />\n                            <TextField\n                                required\n                                placeholder='confirm password'\n                                type={loginForm.showPassword ? \"password\" : \"text\"}\n                                error={!signupForm.confirmPassword}\n                                helperText={signupForm.confirmPassword ? \"\" : \"incorrect\"}\n                                id=\"input-with-icon-textfield\"\n                                InputProps={{\n                                    startAdornment: (\n                                        <InputAdornment position=\"start\">\n                                            <VpnKeyIcon />\n                                        </InputAdornment>\n                                    ),\n                                    endAdornment: (\n                                        <InputAdornment position=\"end\" onClick={() => setLoginForm(pre => ({ ...pre, showPassword: !pre.showPassword }))}>\n                                            {loginForm.showPassword ? <VisibilityIcon /> : <VisibilityOff />}\n                                        </InputAdornment>\n                                    ),\n                                }}\n                                onBlur={(e)=>{if (signupForm.password!=e.target.value)\n                                                    setSignupForm({...signupForm, confirmPassword:false})\n                                                    else setSignupForm({...signupForm, confirmPassword:true})                                                \n                                                }}\n                                \n                            />\n                            <Button variant=\"contained\" color=\"primary\" href=\"#contained-buttons\" onClick={signupHandle}>\n                                submit\n                            </Button>\n\n                            <p>\n                                <a onClick={() => { setLogin(true); setSignup(false) }} style={{cursor:\"pointer\"}}>\n                                    <u>login</u>\n                                </a>\n                                {/* <label> or </label>\n                                <a onClick={() => { setSignup(false); setVerify(true) }}>\n                                    verify\n                                </a> */}\n                            </p>\n                        </div>\n                    </form>}\n\n                {/* {verify &&\n                    <form autoComplete='off'>\n                        <div className={classes.verify}>\n                            <h1>Verify account</h1>\n                            <TextField\n                                required\n                                id=\"input-with-icon-textfield\"\n                                type=\"email\"\n                                placeholder='email'\n                                InputProps={{\n                                    startAdornment: (\n                                        <InputAdornment position=\"start\">\n                                            <MailIcon />\n                                        </InputAdornment>\n                                    ),\n                                }}\n                                onChange={(e) => setVerifyForm({...verifyForm, email:e.target.value})}\n\n                            />\n                            <TextField\n                                required\n                                placeholder='veryfy code'\n                                type=\"text\"\n                                id=\"input-with-icon-textfield\"\n                                InputProps={{\n                                    startAdornment: (\n                                        <InputAdornment position=\"start\" onClick={() => setLoginForm(pre => ({ ...pre, showPassword: !pre.showPassword }))}>\n                                            {<CodeIcon />}\n                                        </InputAdornment>\n                                    ),\n                                }}\n                                onChange={(e) => setVerifyForm({...verifyForm, code:e.target.value})}\n                            />\n                            <Button variant=\"contained\" color=\"primary\" href=\"#contained-buttons\" onClick={verifyHandle}>\n                                confirm\n                            </Button>\n\n                            <p>\n                                <a onClick={() => { setLogin(true); setVerify(false) }}>\n                                    login\n                                </a>\n                                <label> or </label>\n                                <a onClick={() => { setSignup(true); setVerify(false) }}>\n                                    sign up\n                                </a>\n                            </p>\n                        </div>\n                    </form>} */}\n            </div>\n        </div>\n\n    )\n}\n\nexport default Auth;"],"mappings":"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"},"metadata":{},"sourceType":"module"}